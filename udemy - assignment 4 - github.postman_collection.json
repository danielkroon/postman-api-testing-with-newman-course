{
	"info": {
		"_postman_id": "c29a5d48-676e-4a0f-aa37-33df60021d23",
		"name": "udemy - assignment 4 - github",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Trigger OTP code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c934b8cd-8b72-4aa4-864c-17309a7c6d0b",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "a2b27aa2-f98f-49db-b328-c447df374cb2",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/authorizations",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"authorizations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get SMS from Twilio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40cf15ce-d8bc-475c-b563-d9f106b3df83",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const otp = response.messages[0].body.substring(0,6)",
							"",
							"// Save the repo name",
							"pm.environment.set(\"OTPcode\", otp);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{twilioToken}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{twilioAccount}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.twilio.com/2010-04-01/Accounts/:account/Messages.json",
					"protocol": "https",
					"host": [
						"api",
						"twilio",
						"com"
					],
					"path": [
						"2010-04-01",
						"Accounts",
						":account",
						"Messages.json"
					],
					"variable": [
						{
							"key": "account",
							"value": "{{twilioAccount}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "46c5d2db-aacb-4eec-96ec-3f642bbae638",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"// Save the repo name",
							"pm.environment.set(\"repositoryName\", response.name);",
							"",
							"// Clean-up global variables",
							"pm.globals.unset(\"randomString\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ca459953-be66-4815-9819-7006376902f5",
						"exec": [
							"// Generate random string to be used in the repo name",
							"pm.globals.set('randomString', Math.random().toString(36).substring(7));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTPcode}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test repository {{randomString}}\",\n    \"description\": \"{{repositoryDescription}}\"\n}"
				},
				"url": {
					"raw": "https://api.github.com/user/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get created repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a3cc2eb5-05a5-496b-b5ff-ae5be675d1c2",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTPcode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.github.com/repos/danielkroon/{{repositoryName}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"danielkroon",
						"{{repositoryName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d4ee6e19-5f59-4791-8c13-7ee40e830c5f",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.environment.set(\"issueNumber\", jsonData.number);",
							"pm.environment.set(\"issueTitle\", jsonData.title);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTPcode}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"This issue has been automatically created by Postman.\"\n}"
				},
				"url": {
					"raw": "https://api.github.com/repos/danielkroon/{{repositoryName}}/issues",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"danielkroon",
						"{{repositoryName}}",
						"issues"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get created issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f4fc8a99-2654-4a80-96a5-553cb848c1ef",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Name of the issue is {{issueTitle}}\", function () {",
							"    pm.expect(jsonData.title).to.eql(pm.environment.get(\"issueTitle\"));",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTPcode}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/repos/danielkroon/{{repositoryName}}/issues/{{issueNumber}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"danielkroon",
						"{{repositoryName}}",
						"issues",
						"{{issueNumber}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete created repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "39c0f336-295f-4c07-8160-21690e5889a2",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTPcode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.github.com/repos/danielkroon/{{repositoryName}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"danielkroon",
						"{{repositoryName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check if repository is deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44f230a9-090d-41a1-9c85-0aa548090794",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"// clean environment variables",
							"pm.environment.unset(\"issueNumber\");",
							"pm.environment.unset(\"issueTitle\");",
							"pm.environment.unset(\"OTPcode\");",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{email}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{OTPcode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.github.com/repos/danielkroon/{{repositoryName}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"danielkroon",
						"{{repositoryName}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}